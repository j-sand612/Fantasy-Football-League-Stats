{"version":3,"sources":["components/SeachFields.js","models/chartLineModel.js","models/lineDataModel.js","config/config.js","components/StandingsHistory.js","components/Home.js","components/Matchups.js","components/NavBar/NavBarElements.js","components/NavBar/NavBar.js","App.js","index.js"],"names":["SearchFields","props","handleLeagueIDChange","event","setState","leagueID","target","value","handleYearChange","year","handleSubmitButton","bind","state","this","Box","component","sx","mt","ml","noValidate","autoComplete","TextField","id","label","onChange","Button","onClick","variant","React","Component","chartLineModel","name","data","stroke","strokeDashArray","lineDataModel","category","appConfig","apiURL","matchupPath","standingsPath","currentStandingsPath","StandingsHistory","lineColors","columns","field","headerName","width","handleSubmit","loading","error","apiString","axios","get","then","response","console","log","i","j","teams","setDashedValue","length","weekNames","Object","keys","standingsData","dashData","lineData","push","teamLine","Team","cutoffLine","curStandingsResponse","status","catch","apiCurString","standings","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","type","allowDuplicatedCategory","YAxis","reversed","Tooltip","Legend","map","s","Line","style","height","rows","rowsPerPageOptions","Alert","severity","alignContent","CircularProgress","color","Home","display","justifyContent","alignItems","Matchups","muAPIString","matchupsResponse","week","matchups","weeks","Score1","Score2","Type","includes","Week","setScoreStates","setBlowoutCloseWin","setHLLW","setHighestLowestScores","handleChange","maxScore","minScore","maxTeam","minTeam","maxScoreDifferenceString","maxScoreDifferenceTeams","minScoreDifferenceString","minScoreDifferenceTeams","maxScoreTotalString","maxScoreTotalTeams","minScoreTotalString","minScoreTotalTeams","highestLossPoints","highestLossTeam","lowestWinPoints","lowestWinTeam","Team1Name","Team2Name","maxScoreDifference","minScoreDifference","Math","abs","maxScoreTotal","minScoreTotal","minWidth","FormControl","m","InputLabel","Select","labelId","w","MenuItem","TableContainer","maxWidth","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","filter","border","scope","key","position","paddingTop","flexGrow","Grid","container","spacing","item","xs","Card","maxHeight","CardContent","minHeight","Typography","gutterBottom","justiyContent","flexDirection","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","Navbar","to","App","NavBar","path","exact","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03feaafb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nclass SearchFields extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmitButton = this.handleSubmitButton.bind(this);\r\n\r\n    this.state = {\r\n      leagueID: \"\",\r\n      year: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmitButton() {\r\n    // Submit the value to the parent component\r\n    this.props.handleSubmitButton(this.state.leagueID, this.state.year);\r\n  }\r\n\r\n  handleLeagueIDChange = (event) => {\r\n    this.setState({ leagueID: event.target.value });\r\n  };\r\n  handleYearChange = (event) => {\r\n    this.setState({ year: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          \"& > :not(style)\": { mt: 3, ml: 1 },\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          id=\"league-id-input-id\"\r\n          label=\"League ID\"\r\n          value={this.state.leagueID}\r\n          onChange={this.handleLeagueIDChange}\r\n        />\r\n\r\n        <TextField\r\n          id=\"year-input-id\"\r\n          label=\"Year\"\r\n          value={this.state.year}\r\n          onChange={this.handleYearChange}\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            this.handleSubmitButton();\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          Search\r\n        </Button>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchFields;\r\n","export class chartLineModel {\r\n  constructor(name, data, stroke, strokeDashArray) {\r\n    this.name = name;\r\n    this.data = data;\r\n    this.stroke = stroke;\r\n    this.strokeDashArray = strokeDashArray;\r\n  }\r\n}\r\nexport default chartLineModel;\r\n","export class lineDataModel {\r\n  constructor(category, value) {\r\n    this.category = category;\r\n    this.value = value;\r\n  }\r\n}\r\nexport default lineDataModel;\r\n","export const appConfig = {\r\n  apiURL: \"https://ff-league-data.herokuapp.com/\",\r\n  //apiURL: \"http://localhost:5000/\",\r\n  matchupPath: \"flask/Matchup/all\",\r\n  standingsPath: \"flask/Standings\",\r\n  currentStandingsPath: \"flask/CurrentStandings\",\r\n};\r\n\r\nexport default appConfig;\r\n","import React from \"react\";\r\nimport SearchFields from \"./SeachFields\";\r\nimport chartLineModel from \"../models/chartLineModel\";\r\nimport lineDataModel from \"../models/lineDataModel\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport appConfig from \"../config/config\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nclass StandingsHistory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: 0,\r\n      data: 0,\r\n      teams: 0,\r\n      standings: 0,\r\n      curStandingsResponse: 0,\r\n      loading: false,\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  lineColors = [\r\n    \"#e6194b\",\r\n    \"#3cb44b\",\r\n    \"#ffe119\",\r\n    \"#4363d8\",\r\n    \"#f58231\",\r\n    \"#911eb4\",\r\n    \"#46f0f0\",\r\n    \"#f032e6\",\r\n    \"#bcf60c\",\r\n    \"#fabebe\",\r\n    \"#008080\",\r\n    \"#e6beff\",\r\n  ];\r\n\r\n  columns = [\r\n    { field: \"name\", headerName: \"Team\", width: 260 },\r\n    { field: \"Wins\", headerName: \"Wins\", width: 70 },\r\n    { field: \"Losses\", headerName: \"Losses\", width: 130 },\r\n    { field: \"Points For\", headerName: \"Points For\", width: 130 },\r\n    { field: \"Points Against\", headerName: \"Points Against\", width: 130 },\r\n  ];\r\n\r\n  handleSubmit = (leagueID, year) => {\r\n    this.setState({ loading: true, error: false });\r\n    let apiString =\r\n      appConfig.apiURL +\r\n      appConfig.standingsPath +\r\n      \"?leagueID=\" +\r\n      leagueID +\r\n      \"&year=\" +\r\n      year;\r\n    axios\r\n      .get(apiString)\r\n      .then((response) => {\r\n        console.log(\"SUCCESS\", response);\r\n        let data = response.data;\r\n        let teams = [];\r\n        let i, j;\r\n        let setDashedValue = false;\r\n        for (i = 0; i < data.length; i++) {\r\n          let weekNames = Object.keys(data[i]);\r\n          let standingsData = [];\r\n          let dashData = [];\r\n          for (j = 0; j < weekNames.length; j++) {\r\n            if (weekNames[j] !== \"Team\") {\r\n              let lineData = new lineDataModel(\r\n                weekNames[j],\r\n                data[i][weekNames[j]]\r\n              );\r\n              if (!setDashedValue) {\r\n                dashData.push(new lineDataModel(weekNames[j], 6));\r\n              }\r\n              standingsData.push(lineData);\r\n            }\r\n          }\r\n          let teamLine = new chartLineModel(\r\n            data[i].Team,\r\n            standingsData,\r\n            this.lineColors[i],\r\n            \"1\"\r\n          );\r\n          if (!setDashedValue) {\r\n            let cutoffLine = new chartLineModel(\r\n              \"Playoff Cutoff\",\r\n              dashData,\r\n              \"#000000\",\r\n              \"4 4 4\"\r\n            );\r\n            teams.push(cutoffLine);\r\n            setDashedValue = true;\r\n          }\r\n          teams.push(teamLine);\r\n        }\r\n        if (\r\n          this.state.curStandingsResponse.status === 200 &&\r\n          response.status === 200\r\n        ) {\r\n          this.setState({ loading: false });\r\n        }\r\n        this.setState({ response, data, teams });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: true, loading: false });\r\n        console.log(error);\r\n      });\r\n\r\n    let apiCurString =\r\n      appConfig.apiURL +\r\n      appConfig.currentStandingsPath +\r\n      \"?leagueID=\" +\r\n      leagueID +\r\n      \"&year=\" +\r\n      year;\r\n    axios\r\n      .get(apiCurString)\r\n      .then((curStandingsResponse) => {\r\n        console.log(\"SUCCESS\", curStandingsResponse);\r\n        let standings = curStandingsResponse.data;\r\n        if (\r\n          curStandingsResponse.status === 200 &&\r\n          this.state.response.status === 200\r\n        ) {\r\n          this.setState({ loading: false });\r\n        }\r\n        this.setState({ standings, curStandingsResponse });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: true, loading: false });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchFields handleSubmitButton={this.handleSubmit}></SearchFields>\r\n        <div>\r\n          {this.state.response.status === 200 ? (\r\n            <>\r\n              <ResponsiveContainer width=\"99%\" aspect={3}>\r\n                <LineChart>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis\r\n                    dataKey=\"category\"\r\n                    type=\"category\"\r\n                    allowDuplicatedCategory={false}\r\n                  />\r\n                  <YAxis reversed=\"true\" dataKey=\"value\" />\r\n                  <Tooltip />\r\n                  <Legend />\r\n                  {this.state.teams.map((s) => (\r\n                    <Line\r\n                      dataKey=\"value\"\r\n                      data={s.data}\r\n                      name={s.name}\r\n                      key={s.name}\r\n                      stroke={s.stroke}\r\n                      strokeDashArray={s.strokeDasharray}\r\n                    />\r\n                  ))}\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {this.state.curStandingsResponse.status === 200 ? (\r\n            <>\r\n              <div style={{ height: 800, width: \"60%\" }}>\r\n                <DataGrid\r\n                  rows={this.state.standings}\r\n                  columns={this.columns}\r\n                  rowsPerPageOptions={[]}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {this.state.error ? (\r\n            <>\r\n              <Alert severity=\"error\">Error retrieving data</Alert>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {this.state.loading ? (\r\n            <>\r\n              <div style={{ alignContent: \"center\" }}>\r\n                <CircularProgress color=\"success\" />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StandingsHistory;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"Center\",\r\n        }}\r\n      >\r\n        <h1>Fantasy Football League Data</h1>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"Center\",\r\n        }}\r\n      >\r\n        <p>\r\n          This site site is for visualizing data throughout your current and\r\n          past ESPN Fantasy Football Leagues, and it is only compatible with\r\n          public ESPN Leagues\r\n        </p>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"Center\",\r\n        }}\r\n      >\r\n        <p>Navigate through the different features using the tabs at the top</p>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"Center\",\r\n        }}\r\n      >\r\n        <p>\r\n          You will need the your league id which you can find in the espn url\r\n          once you navigate to your league home page\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchFields from \"./SeachFields\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport appConfig from \"../config/config\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nclass Matchups extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      matchups: 0,\r\n      matchupsResponse: 0,\r\n      weeks: 0,\r\n      week: 0,\r\n      maxScore: 0,\r\n      minScore: 9999,\r\n      maxTeam: \"\",\r\n      minTeam: \"\",\r\n      maxScoreDifferenceString: \"\",\r\n      maxScoreDifferenceTeams: \"\",\r\n      minScoreDifferenceString: \"\",\r\n      minScoreDifferenceTeams: \"\",\r\n      maxScoreTotalString: \"\",\r\n      maxScoreTotalTeams: \"\",\r\n      minScoreTotalString: \"\",\r\n      minScoreTotalTeams: \"\",\r\n      highestLossPoints: \"\",\r\n      highestLossTeam: \"\",\r\n      lowestWinPoints: \"\",\r\n      lowestWinTeam: \"\",\r\n      error: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit = (leagueID, year) => {\r\n    this.setState({ loading: true, error: false });\r\n    let muAPIString =\r\n      appConfig.apiURL +\r\n      appConfig.matchupPath +\r\n      \"?leagueID=\" +\r\n      leagueID +\r\n      \"&year=\" +\r\n      year;\r\n    axios\r\n      .get(muAPIString)\r\n      .then((matchupsResponse) => {\r\n        if (matchupsResponse.status === 200) {\r\n          this.setState({ loading: false });\r\n        }\r\n        let matchups = matchupsResponse.data;\r\n        let weeks = [];\r\n        let week = 0;\r\n        let i;\r\n        for (i = 0; i < matchups.length; i++) {\r\n          if (\r\n            matchups[i].Score1 !== 0 &&\r\n            matchups[i].Score2 !== 0 &&\r\n            matchups[i].Type === \"Regular\" &&\r\n            !weeks.includes(matchups[i].Week)\r\n          ) {\r\n            weeks.push(matchups[i].Week);\r\n          }\r\n        }\r\n\r\n        week = weeks[weeks.length - 1];\r\n        this.setScoreStates(week, matchups);\r\n        this.setBlowoutCloseWin(week, matchups);\r\n        this.setHLLW(week, matchups);\r\n        this.setHighestLowestScores(week, matchups);\r\n        this.setState({ matchups, matchupsResponse, weeks, week });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error: true, loading: false });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  setScoreStates(week, matchups) {\r\n    let maxScore = 0;\r\n    let maxTeam = \"\";\r\n    let minScore = 9999;\r\n    let minTeam = \"\";\r\n    let i = 0;\r\n    for (i = 0; i < matchups.length; i++) {\r\n      if (matchups[i].Week === week) {\r\n        if (matchups[i].Score1 > maxScore) {\r\n          maxScore = matchups[i].Score1;\r\n          maxTeam = matchups[i].Team1Name;\r\n        }\r\n        if (matchups[i].Score2 > maxScore) {\r\n          maxScore = matchups[i].Score2;\r\n          maxTeam = matchups[i].Team2Name;\r\n        }\r\n\r\n        if (matchups[i].Score1 < minScore) {\r\n          minScore = matchups[i].Score1;\r\n          minTeam = matchups[i].Team1Name;\r\n        }\r\n        if (matchups[i].Score2 < minScore) {\r\n          minScore = matchups[i].Score2;\r\n          minTeam = matchups[i].Team2Name;\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      maxScore,\r\n      maxTeam,\r\n      minScore,\r\n      minTeam,\r\n    });\r\n  }\r\n\r\n  setBlowoutCloseWin(week, matchups) {\r\n    let maxScoreDifference = 0;\r\n    let minScoreDifference = 9999;\r\n    let maxScoreDifferenceTeams = \"\";\r\n    let minScoreDifferenceTeams = \"\";\r\n    let maxScoreDifferenceString = \"\";\r\n    let minScoreDifferenceString = \"\";\r\n    let i = 0;\r\n    for (i = 0; i < matchups.length; i++) {\r\n      if (matchups[i].Week === week) {\r\n        if (\r\n          Math.abs(matchups[i].Score1 - matchups[i].Score2) > maxScoreDifference\r\n        ) {\r\n          maxScoreDifference = Math.abs(\r\n            matchups[i].Score1 - matchups[i].Score2\r\n          );\r\n          maxScoreDifferenceString =\r\n            matchups[i].Score1 + \" - \" + matchups[i].Score2;\r\n          maxScoreDifferenceTeams =\r\n            matchups[i].Team1Name + \"\\n vs \\n\" + matchups[i].Team2Name;\r\n        }\r\n        if (\r\n          Math.abs(matchups[i].Score1 - matchups[i].Score2) < minScoreDifference\r\n        ) {\r\n          minScoreDifference = Math.abs(\r\n            matchups[i].Score1 - matchups[i].Score2\r\n          );\r\n          minScoreDifferenceString =\r\n            matchups[i].Score1 + \" - \" + matchups[i].Score2;\r\n\r\n          minScoreDifferenceTeams =\r\n            matchups[i].Team1Name + \"\\n vs \\n\" + matchups[i].Team2Name;\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      maxScoreDifferenceString,\r\n      maxScoreDifferenceTeams,\r\n      minScoreDifferenceString,\r\n      minScoreDifferenceTeams,\r\n    });\r\n  }\r\n\r\n  setHighestLowestScores(week, matchups) {\r\n    let maxScoreTotal = 0;\r\n    let minScoreTotal = 9999;\r\n    let maxScoreTotalTeams = \"\";\r\n    let minScoreTotalTeams = \"\";\r\n    let maxScoreTotalString = \"\";\r\n    let minScoreTotalString = \"\";\r\n    let i = 0;\r\n    for (i = 0; i < matchups.length; i++) {\r\n      if (matchups[i].Week === week) {\r\n        if (matchups[i].Score1 + matchups[i].Score2 > maxScoreTotal) {\r\n          maxScoreTotal = matchups[i].Score1 + matchups[i].Score2;\r\n          maxScoreTotalString = matchups[i].Score1 + \" - \" + matchups[i].Score2;\r\n          maxScoreTotalTeams =\r\n            matchups[i].Team1Name + \"\\n vs \\n\" + matchups[i].Team2Name;\r\n        }\r\n        if (matchups[i].Score1 + matchups[i].Score2 < minScoreTotal) {\r\n          minScoreTotal = matchups[i].Score1 + matchups[i].Score2;\r\n          minScoreTotalString = matchups[i].Score1 + \" - \" + matchups[i].Score2;\r\n\r\n          minScoreTotalTeams =\r\n            matchups[i].Team1Name + \"\\n vs \\n\" + matchups[i].Team2Name;\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      maxScoreTotalString,\r\n      maxScoreTotalTeams,\r\n      minScoreTotalString,\r\n      minScoreTotalTeams,\r\n    });\r\n  }\r\n\r\n  //highest loss, lowest win\r\n  setHLLW(week, matchups) {\r\n    let highestLossPoints = 0;\r\n    let lowestWinPoints = 9999;\r\n    let highestLossTeam = \"\";\r\n    let lowestWinTeam = \"\";\r\n    let i = 0;\r\n    for (i = 0; i < matchups.length; i++) {\r\n      if (matchups[i].Week === week) {\r\n        if (matchups[i].Score1 > matchups[i].Score2) {\r\n          if (matchups[i].Score1 < lowestWinPoints) {\r\n            lowestWinPoints = matchups[i].Score1;\r\n            lowestWinTeam = matchups[i].Team1Name;\r\n          }\r\n\r\n          if (matchups[i].Score2 > highestLossPoints) {\r\n            highestLossPoints = matchups[i].Score2;\r\n            highestLossTeam = matchups[i].Team2Name;\r\n          }\r\n        }\r\n        if (matchups[i].Score2 > matchups[i].Score1) {\r\n          if (matchups[i].Score2 < lowestWinPoints) {\r\n            lowestWinPoints = matchups[i].Score2;\r\n            lowestWinTeam = matchups[i].Team2Name;\r\n          }\r\n\r\n          if (matchups[i].Score1 > highestLossPoints) {\r\n            highestLossPoints = matchups[i].Score1;\r\n            highestLossTeam = matchups[i].Team1Name;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      highestLossPoints,\r\n      highestLossTeam,\r\n      lowestWinPoints,\r\n      lowestWinTeam,\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setBlowoutCloseWin(event.target.value, this.state.matchups);\r\n    this.setHighestLowestScores(event.target.value, this.state.matchups);\r\n    this.setScoreStates(event.target.value, this.state.matchups);\r\n    this.setHLLW(event.target.value, this.state.matchups);\r\n    this.setState({\r\n      week: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchFields handleSubmitButton={this.handleSubmit}></SearchFields>\r\n        <div>\r\n          {this.state.matchupsResponse.status === 200 ? (\r\n            <>\r\n              <Box sx={{ minWidth: 120 }}>\r\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n                  <InputLabel id=\"week-select-label\">Week</InputLabel>\r\n                  <Select\r\n                    labelId=\"week-select-label\"\r\n                    id=\"week-select\"\r\n                    value={this.state.week}\r\n                    label=\"Week\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.weeks.map((w) => (\r\n                      <MenuItem value={w}>Week {w}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n\r\n              <TableContainer sx={{ maxWidth: 650 }} component={Paper}>\r\n                <Table\r\n                  sx={{ maxWidth: 650 }}\r\n                  size=\"small\"\r\n                  aria-label=\"Matchups\"\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Matchup</TableCell>\r\n                      <TableCell align=\"right\">Score</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.matchups\r\n                      .filter((m) => m.Week === this.state.week)\r\n                      .map((m) => (\r\n                        <TableRow\r\n                          key={m.key}\r\n                          sx={{\r\n                            \"&:last-child td, &:last-child th\": { border: 0 },\r\n                          }}\r\n                        >\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {m.Team1Name}&nbsp;vs.&nbsp;{m.Team2Name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {m.Score1}&nbsp;-&nbsp;{m.Score2}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  width: \"100%\",\r\n                  paddingTop: \"50px\",\r\n                }}\r\n              >\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                  <Grid container spacing={2} columns={4}>\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Highest Scoring Team\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.maxTeam}\r\n                          </Typography>\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justiyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.maxScore} Points\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Lowest Scoring Team\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.minTeam}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.minScore} Points\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Biggest Blowout\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.maxScoreDifferenceTeams}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.maxScoreDifferenceString}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Closest Matchup\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.minScoreDifferenceTeams}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.minScoreDifferenceString}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Highest Scoring Game\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.maxScoreTotalTeams}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.maxScoreTotalString}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Lowest Scoring Game\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.minScoreTotalTeams}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.minScoreTotalString}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Highest Points in Loss\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.highestLossTeam}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.highestLossPoints}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={1}>\r\n                      <Card sx={{ maxWidth: 345, maxHeight: 220 }}>\r\n                        <CardContent sx={{ maxWidth: 345, minHeight: 220 }}>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            Lowest Points in Win\r\n                          </Typography>\r\n                          <Typography gutterBottom variant=\"h4\" component=\"div\">\r\n                            {this.state.lowestWinTeam}\r\n                          </Typography>\r\n\r\n                          <Typography\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              flexDirection: \"column\",\r\n                            }}\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {this.state.lowestWinPoints}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {this.state.error ? (\r\n            <>\r\n              <Alert severity=\"error\">Error retrieving data</Alert>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {this.state.loading ? (\r\n            <>\r\n              <div style={{ alignContent: \"center\" }}>\r\n                <CircularProgress color=\"success\" />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Matchups;\r\n","import { FaBars } from \"react-icons/fa\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n  background: #228b22;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  //   padding: 0.2rem calc((100vw - 1000px) / 2);\r\n  z-index: 12;\r\n  /* Third Nav */\r\n  /* justify-content: flex-start; */\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: left;\r\n  text-decoration: none;\r\n  padding: 1rem 1rem 0 1rem;\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #808080;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: left;\r\n  //   margin-right: -24px;\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\nwhite-space: nowrap; */\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: left;\r\n  margin-right: 24px;\r\n  /* Third Nav */\r\n  /* justify-content: flex-end;\r\nwidth: 100vw; */\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #808080;\r\n  padding: 10px 22px;\r\n  color: #000000;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n  /* Second Nav */\r\n  margin-left: 24px;\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #808080;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Nav, NavLink, Bars, NavMenu } from \"./NavBarElements\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Bars />\r\n\r\n        <NavMenu>\r\n          <NavLink to=\"/Home\">Home</NavLink>\r\n          <NavLink to=\"/StandingsHistory\">Standings</NavLink>\r\n          <NavLink to=\"/Matchups\">Matchups</NavLink>\r\n          {/* Second Nav */}\r\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\r\n        </NavMenu>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport StandingsHistory from \"./components/StandingsHistory\";\nimport Home from \"./components/Home\";\nimport Matchups from \"./components/Matchups\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <Routes>\n          <Route path=\"/\" exact element={<Home />} />\n          <Route path=\"/Home\" element={<Home />} />\n          <Route path=\"/StandingsHistory\" element={<StandingsHistory />} />\n          <Route path=\"/Matchups\" element={<Matchups />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}